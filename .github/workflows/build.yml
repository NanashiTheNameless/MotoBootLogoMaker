name: Build

on:
  push:
    branches: ["**"]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  ROLLING_TAG: Nightly-Rolling
  ARTIFACT_PREFIX: MotoBootLogoMaker

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        config: [Debug, Release]
        platform: [x86, x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-version: latest

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Point MSBuild to vendored .NET 4.0 refs
        shell: powershell
        run: |
          $ref = [System.IO.Path]::Combine($env:GITHUB_WORKSPACE, 'third_party', 'Microsoft.NETFramework.ReferenceAssemblies.net40', 'build', '.NETFramework', 'v4.0')
          if (-not (Test-Path $ref)) { throw "Missing vendored v4.0 ref assemblies at $ref" }
          "FrameworkPathOverride=$ref" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Restore packages
        run: nuget restore Moto_Logo.sln

      - name: Build
        run: msbuild Moto_Logo.sln /m /t:Build /p:Configuration=${{ matrix.config }} /p:Platform=${{ matrix.platform }}

      - name: Upload Release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-${{ matrix.config }}-${{ matrix.platform }}
          path: |
            **/bin/**
          if-no-files-found: error

  publish:
    name: Publish Nightly-Rolling
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/master')) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.ARTIFACT_PREFIX }}-*
          path: _dl
          merge-multiple: false

      - name: Pack artifacts for release
        run: |
          set -euxo pipefail
          mkdir -p _to_release
          shopt -s nullglob

          for d in _dl/*; do
            [ -d "$d" ] || continue
            base="$(basename "$d")"   # e.g. MotoBootLogoMaker-Release-x86
            exe="$(find "$d" -type f -name 'MotoBootLogoMaker.exe' | head -n1 || true)"

            if [ -z "${exe}" ]; then
              echo "WARN: No MotoBootLogoMaker.exe found in $d — skipping"
              continue
            fi

            bindir="$(dirname "$exe")"
            cfg="${bindir}/MotoBootLogoMaker.exe.config"
            out="_to_release/${base}.zip"

            if [ -f "$cfg" ]; then
              # -j “junk paths” so the files are at archive root
              zip -j "$out" "$exe" "$cfg"
            else
              echo "NOTE: No .config next to executable in $bindir; zipping exe only."
              zip -j "$out" "$exe"
            fi
          done

          ls -l _to_release

      - name: Update release tag
        if: ${{ (github.event_name == 'workflow_dispatch' || github.event_name == 'push') }}
        uses: NanashiTheNameless/action-create-tag@main
        with:
          tag: "Nightly-Rolling"
          tag_exists_error: false
          force_push_tag: true
          message: "Nightly-Rolling"
